name: dristi workflow
on:
  push:
    branches:
      - prtest
  pull_request:
    branches:
      - prtest
  workflow_dispatch:
jobs:
  docker_image-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Docker
        uses: docker/setup-buildx-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Check for changes in advocate module
        id: advocate-changes
        run: |
          if [ $(git rev-parse --is-inside-work-tree 2>/dev/null) ]; then
            if git diff --name-only HEAD~1..HEAD | grep -q '^backend/advocate/'; then
              echo "advocate=true" >> $GITHUB_ENV
            else
              echo "advocate=false" >> $GITHUB_ENV
            fi
          else
            echo "advocate=false" >> $GITHUB_ENV
          fi

      - name: Check for changes in case module
        id: case-changes
        run: |
          if [ $(git rev-parse --is-inside-work-tree 2>/dev/null) ]; then
            if git diff --name-only HEAD~1..HEAD | grep -q '^backend/case/'; then
              echo "case=true" >> $GITHUB_ENV
            else
              echo "case=false" >> $GITHUB_ENV
            fi
          else
            echo "case=false" >> $GITHUB_ENV
          fi

      - name: Check for changes in order module
        id: order-changes
        run: |
          if [ $(git rev-parse --is-inside-work-tree 2>/dev/null) ]; then
            if git diff --name-only HEAD~1..HEAD | grep -q '^backend/order/'; then
              echo "order=true" >> $GITHUB_ENV
            else
              echo "order=false" >> $GITHUB_ENV
            fi
          else
            echo "order=false" >> $GITHUB_ENV
          fi

      - name: Check for changes in digit-ui
        id: digit-ui-changes
        run: |
          if [ $(git rev-parse --is-inside-work-tree 2>/dev/null) ]; then
            if git diff --name-only HEAD~1..HEAD | grep -q '^frontend/micro-ui/'; then
              echo "digit_ui=true" >> $GITHUB_ENV
            else
              echo "digit_ui=false" >> $GITHUB_ENV
            fi
          else
            echo "digit_ui=false" >> $GITHUB_ENV
          fi

      - name: Build and analyze advocate
        if: env.advocate == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        run: mvn -B -f backend/advocate/pom.xml verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=pucar_advocate -Dsonar.organization=pucar -Dsonar.host.url=https://sonarcloud.io/

      - name: Build and analyze case
        if: env.case == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        run: mvn -B -f backend/case/pom.xml verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=pucar_case -Dsonar.organization=pucar -Dsonar.host.url=https://sonarcloud.io/

      - name: Build and analyze order
        if: env.order == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        run: mvn -B -f backend/order/pom.xml verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=pucar_order -Dsonar.organization=pucar -Dsonar.host.url=https://sonarcloud.io/

      - name: Login to Azure Container Registry
        run: docker login -u pucardev -p ${{ secrets.ACR_PASSWORD }} pucardev.azurecr.io

      - name: Build and Push Docker image for advocate
        if: env.advocate == 'true'
        run: |
          docker build --build-arg WORK_DIR="backend/advocate" -t pucar_advocate:v1.0.0-${{ github.sha }} -f build/maven/Dockerfile .
          docker tag pucar_advocate:v1.0.0-${{ github.sha }} pucardev.azurecr.io/pucar_advocate:v1.0.0-${{ github.sha }}
          docker push pucardev.azurecr.io/pucar_advocate:v1.0.0-${{ github.sha }}

      - name: Build and Push Docker image for advocate_DB
        if: env.advocate == 'true'
        run: |
          docker build -t pucar_advocate_db:v1.0.0-${{ github.sha }} -f Dockerfile .
          docker tag pucar_advocate_db:v1.0.0-${{ github.sha }} pucardev.azurecr.io/pucar_advocate_db:v1.0.0-${{ github.sha }}
          docker push pucardev.azurecr.io/pucar_advocate_db:v1.0.0-${{ github.sha }}
        working-directory: backend/advocate/src/main/resources/db

      - name: Build and Push Docker image for case
        if: env.case == 'true'
        run: |
          docker build --build-arg WORK_DIR="backend/case" -t pucar_case:v1.0.0-${{ github.sha }} -f build/maven/Dockerfile .
          docker tag pucar_case:v1.0.0-${{ github.sha }} pucardev.azurecr.io/pucar_case:v1.0.0-${{ github.sha }}
          docker push pucardev.azurecr.io/pucar_case:v1.0.0-${{ github.sha }}

      - name: Build and Push Docker image for case_DB
        if: env.case == 'true'
        run: |
          docker build -t pucar_case_db:v1.0.0-${{ github.sha }} -f Dockerfile .
          docker tag pucar_case_db:v1.0.0-${{ github.sha }} pucardev.azurecr.io/pucar_case_db:v1.0.0-${{ github.sha }}
          docker push pucardev.azurecr.io/pucar_case_db:v1.0.0-${{ github.sha }}
        working-directory: backend/case/src/main/resources/db

      - name: Build and Push Docker image for order
        if: env.order == 'true'
        run: |
          docker build --build-arg WORK_DIR="backend/order" -t pucar_order:v1.0.0-${{ github.sha }} -f build/maven/Dockerfile .
          docker tag pucar_order:v1.0.0-${{ github.sha }} pucardev.azurecr.io/pucar_order:v1.0.0-${{ github.sha }}
          docker push pucardev.azurecr.io/pucar_order:v1.0.0-${{ github.sha }}

      - name: Build and Push Docker image for order_DB
        if: env.order == 'true'
        run: |
          docker build -t pucar_order_db:v1.0.0-${{ github.sha }} -f Dockerfile .
          docker tag pucar_order_db:v1.0.0-${{ github.sha }} pucardev.azurecr.io/pucar_order_db:v1.0.0-${{ github.sha }}
          docker push pucardev.azurecr.io/pucar_order_db:v1.0.0-${{ github.sha }}
        working-directory: backend/order/src/main/resources/db

      - name: Build and Push Docker image for digit-ui
        if: env.digit_ui == 'true'
        run: |
          docker build -t digit-ui:v1.0.0-${{ github.sha }} -f web/docker/Dockerfile .
          docker tag digit-ui:v1.0.0-${{ github.sha }} pucardev.azurecr.io/digit-ui:v1.0.0-${{ github.sha }}
          docker push pucardev.azurecr.io/digit-ui:v1.0.0-${{ github.sha }}
        working-directory: frontend/micro-ui

#       - name: trigger deployment pipeline
#         run: |
#           curl -X POST \
#           -H "Accept: application/vnd.github.v3+json" \
#           -H "Authorization: token ${{ secrets.GHUB_TOKEN }}" \
#           https://api.github.com/repos/pucardotorg/pucar-Devops/actions/workflows/dev.yaml/dispatches \
#           -d '{"ref":"Dev-0"}'
# '
