openapi: 3.0.0
info:
  title: Case Management Service
  description: |
    This is a draft API specification for a case management service that provides value added services on top of the Case registry. 
    1. The case management service provides APIs to retrieve the summary and history of a case. 
    2. It updates the master status of the case by looking into the status of all the different entities in the case lifecycle. This is done as per the case classification strategy that was agreed upon. 
    3. The service also provides a way to group/ungroup cases
  version: 0.1.0
tags:
  - name: Case Management Service
    description: APIs of the case management service
  - name: Witness
    description: APIs to add witnesses to a case
paths:
  /casemanager/case/v1/_summary:
    post:
      tags:
        - Case Management Service
      summary: returns public fields of the case given a case identifier
      description: |
        The API exposes only the required public fields for querying a case. Use this summary API for generic searches by anyone not related to the case
      requestBody:
        description: Details for the new court case + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CaseRequest'
        required: true
      responses:
        '201':
          description: ResponseInfo with case groups created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CaseSummaryResponse'
        '400':
          description: Court case creation failed
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse

  /casemanager/case/v1/_history:
    post:
      tags:
        - Case Management Service
      summary: Provides the case file or case history given a case identifier
      description: |
        API to retrieve the full case file or history given a case identifier
      requestBody:
        description: Details for updating all updatable fields in the court case + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CaseRequest'
        required: true
      responses:
        '200':
          description: ResponseInfo with case details updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CaseFileResponse'
        '400':
          description: Error fetching case file
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse
  
  /casemanager/case/v1/_group:
    post:
      tags:
        - Case Management Service
      summary: Provides the ability to group cases together for operational and/or other purposes.
      description: |
        API to create a logical grouping of cases for operational reasons. Cases will continue to be treated as separate entities and orders/judgements will be issued separately. This grouping is primarily meant for hearings to be scheduled together. 
      requestBody:
        description: Details of the court cases to be grouped together + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CaseGroupRequest'
        required: true
      responses:
        '200':
          description: ResponseInfo with case group created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CaseGroupResponse'
        '400':
          description: Error grouping cases together. 
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse
  
  /casemanager/case/v1/_ungroup:
    post:
      tags:
        - Case Management Service
      summary: Provides the ability to ungroup one or more cases from a group.
      description: |
        API to remove a case or all cases from the logical grouping. 
      requestBody:
        description: Details of the court cases to be ungrouped + ResponseInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CaseGroupRequest'
        required: true
      responses:
        '200':
          description: ResponseInfo with case group created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CaseGroupResponse'
        '400':
          description: Error grouping cases together. 
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse

components:
  schemas:
    CaseGroup:
      description: Holds a logical grouping of cases
      required: [caseIds]
      properties:
        id:
          type: string
          description: Autogenerated UUID of the case group. It is the primary key used to search for the case groups.
          minLength: 2
          maxLength: 128
          readOnly: true 
        caseIds:
          type: array
          description: The UUID of the cases that are to be grouped together logically
          items:
            type: string
          minItems: 1
    
    CaseSummary:
      description: Representation of the case summary.
      type: object
      required:
        - tenantId
        - caseTitle
        - filingDate
        - statutesAndSections
        - stage
        - subStage
        - litigants
      properties:
        tenantId:
          type: string
          description: This is tenantId where the case is being managed.
          minLength: 2
          maxLength: 64
        caseTitle:
          type: string
          description: A simple one-liner summary title used to refer to the case.
          minLength: 2
          maxLength: 512
          readOnly: true
        filingDate:
          type: integer
          format: int64
          description: The date of case filing is in epoch time (milliseconds). This is the date when the case entered the judicial system.
          example: 1709542147
        statutesAndSections:
          type: string
          description: A string of statute and sections, concatenated into a single string. Format - first statute + all sections comma separated, then semicolon followed by second statute + all sections comma separated and so on
          example: "NIA 138, 142(1)(a), 145; CrPC 100, 402(a)"
        stage:
          type: string
          description: the main/primary stage of the case
          example: Pre-Trial, Trial, Post-Trial
        subStage:
          type: string
          description: the secondary level of stage within the primary stage
          example: Filing, Cognizance, Appearance, Evidence, Judgement etc.
        litigants:
          type: array
          items:
            $ref: '#/components/schemas/PartySummary'
        representatives:
          type: array
          description: The advocate/representative representing the party in this case. This is not the individualID, rather the ID given to the advocate when they register in the system.
          items:
            $ref: '#/components/schemas/RepresentativeSummary'

    PartySummary:
      type: object
      description: created from the Party entity in CaseAPI. Includes only active parties ('isActive' is true)
      required:
        - partyCategory
        - partyType
        - individualId
        - individualName
        - organizationId
      properties:
        partyCategory:
          type: string
          description: Is Individual or organisation or something else. Master data ID to
            be stored here.
          example: INDIVIDUAL, ORGANISATION
        partyType:
          type: string
          description: This field holds information about type of party (name spaced Master Data).
          example:
            - complainant.primary
            - complainant.additional
            - respondent.primary
        individualId:
          type: string
          description: The individual ID of the complainant. In case party is of type org, this
            is the person representing the company in the case. This entity
            holds all the details of the user including their name, address,
            contact etc..
        individualName:
          type: string
          description: name of the individual from the Individual registry. This is made part of this API to avoid making additional trips just to get the names
        organisationID:
          type: string
          description: Refers to the organization ID if the party is an organisation, otherwise null
        isPartyInPerson:
          type: boolean
          description: Indicates whether the litigant is representing themselves. In this case litigant's individual ID will be added in the representativeId.

    RepresentativeSummary:
      type: object
      properties:
        partyId:
          type: string
        advocateId:
          type: string
        advocateType:
          type: string
          enum:
            - primary
            - support


    CaseFile:
      description: Representation of the case file. This is an aggregation of all the entities across the case lifecycle.
      required:
        - case
      type: object
      properties:
        case: 
          $ref: './case-api-0.1.0.yaml#/components/schemas/CourtCase'
        hearings:
          type: array
          items:
            $ref: './hearing-api-0.1.0.yaml#/components/schemas/Hearing'
        witnesses:
          type: array
          items:
            $ref: './hearing-api-0.1.0.yaml#/components/schemas/Hearing'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderTasks'
        applications:
          type: array
          items:
            $ref: './application-api-0.1.0.yaml#/components/schemas/Application'
        evidence:
          type: array
          items:
            $ref: './evidence-api-0.1.0.yaml#/components/schemas/Artifact'
    
    OrderTasks:
      type: object
      properties:
        order:
          $ref: './order-api-0.1.0.yaml#/components/schemas/Order'
        tasks:
          type: array
          items:
            $ref: './task-api-0.1.0.yaml#/components/schemas/Task'

    CaseRequest:
      type: object
      properties:
        requestInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo
        tenantId:
          type: string
        caseId:
          type: string
          description: The UUID of the case for which the case file is requested.
        filingNumber:
          type: string
          description: The filing number of the case
        caseNumber:
          type: string
          description: The CNR number of the case for which the case file is requested.


    CaseFileResponse:
      type: object
      properties:
        requestInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo
        caseFiles:
          type: array
          items:
            $ref: '#/components/schemas/CaseFile'
    
    CaseSummaryResponse:
      type: object
      properties:
        requestInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/CaseSummary'
    
    CaseGroupRequest:
      type: object
      properties:
        requestInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo
        caseGroups:
          type: array
          items:
            $ref: '#/components/schemas/CaseGroup'
    
    CaseGroupResponse:
      type: object
      properties:
        responseInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo
        caseGroups:
          type: array
          items:
            $ref: '#/components/schemas/CaseGroup'


